"""
Задание 3.

Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.

Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""

company = {"WalMart": 524.000,
           "State Grid": 387.000,
           "Sinopec Group": 369.200,
           "China National Petroleum": 364.100,
           "Saudi Aramco": 320.000,
           "Shell": 310.300,
           "Toyota": 280.500,
           "BP": 278.400,
           "Volkswagen": 275.200,
           "Exxon Mobil": 265.700}
# сложность O(N*Log)
max_val = list(company.items())
max_val.sort(key=lambda s: s[1], reverse=True)
for s in range(3):
    print(max_val[s][0], "-", max_val[s][1])

print("*" * 70)

# сложность O(N)
def max_v(list_max):
    max_vl = {}
    list_ = dict(list_max)
    for i in range(3):
        max_ = max(list_.items(), key=lambda el: el[1])
        del list_[max_[0]]
        max_vl[max_[0]] = max_[1]
    return max_vl


print(max_v(company))
