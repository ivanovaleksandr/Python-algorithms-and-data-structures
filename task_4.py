"""
Задание 4.

Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.

Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
"""

#сложность O(n)
def entrance(users, login, login_password):
    for key, value in users.items():
        if key == login:
            if value["password"] == login_password and value["password"]:
                return ("Вход выполнен!")
            elif value["password"] == login_password and not value["password"]:
                return ("Учетная запись не активирована, пройдите активацию!")
            elif value["password"] == login_password:
                return ("Пароль не верный!")

    return ("Пользователя не существует!")


#сложность O(1)
def entrance(users, login, login_password):
        if users.get(login):
            if users[login]["password"] == login_password and users[login]["password"]:
                return ("Вход выполнен!")
            elif users[login]["password"] == login_password and not users[login]["password"]:
                return ("Учетная запись не активирована, пройдите активацию!")
            elif users[login]["password"] == login_password:
                return ("Пароль не верный!")
        else:
            return ("Пользователя не существует!")